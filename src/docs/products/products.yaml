paths:
  /api/products/:
    get:
      summary: Obtener todos los productos
      tags: 
        - Products
      description: Trae todos los productos de la base de datos.
      responses:
        "200":
          description: Datos obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product' 
    post:
      summary: Crear un nuevo producto
      tags:
        - Products
      description: Crea un nuevo producto y lo agrega a la base de datos.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Producto creado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /api/products/{pid}:
    get:
      summary: Obtener un producto por ID
      tags: 
        - Products
      description: Devuelve un producto específico por su ID.
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        '200':
          description: Producto encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado.
    put:
      summary: Actualizar un producto por ID
      description: Actualiza los datos de un producto específico por su ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: ID del producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Producto actualizado con éxito.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado.
    delete:
      summary: Eliminar un producto por ID
      description: Elimina un producto específico por su ID.
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: ID del producto
      responses:
        '204':
          description: Producto eliminado con éxito.
        '404':
          description: Producto no encontrado.

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
          example: "612e3f51fcd8b8a1d0f7a671"
        title:
          type: string
          example: "Producto 1"
        description:
          type: string
          example: "Descripción del producto 1."
        price:
          type: number
          example: 1500
        code:
          type: string
          example: "G76fU2"
        stock:
          type: number
          example: 100
        category:
          type: string
          example: "Categoría del producto 1."
        owner:
          type: string
          example: "creador-del-producto@mail.com"
    ProductInput:
      type: object
      properties:
        title:
          type: string
          example: "Producto 1"
        description:
          type: string
          example: "Descripción del producto 1."
        price:
          type: number
          example: 1500
        code:
          type: string
          example: "G76fU2"
        stock:
          type: number
          example: 100
        category:
          type: string
          example: "Categoría del producto 1."